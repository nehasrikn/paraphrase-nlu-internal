{
 "dataset_name": "atomic_dnli_annotation_examples_4",
 "example_ids": [
  "atomic.train.32501",
  "atomic.train.30739",
  "atomic.train.1274",
  "atomic.train.33228",
  "atomic.train.22712",
  "atomic.train.15319",
  "atomic.train.9025",
  "atomic.train.26896",
  "atomic.train.11060",
  "atomic.train.32120",
  "atomic.train.20538",
  "atomic.train.9078",
  "atomic.train.21420",
  "atomic.train.36800",
  "atomic.train.29591",
  "atomic.train.2881",
  "atomic.train.3684",
  "atomic.train.18302",
  "atomic.train.15221",
  "atomic.train.24956",
  "atomic.train.2579",
  "atomic.train.9079",
  "atomic.train.25742",
  "atomic.train.19106",
  "atomic.train.22933",
  "atomic.train.22713",
  "atomic.train.37024",
  "atomic.train.21524",
  "atomic.train.37784",
  "atomic.train.20874",
  "atomic.train.2846",
  "atomic.train.11568",
  "atomic.train.25743",
  "atomic.train.11069",
  "atomic.train.5662",
  "atomic.train.19482",
  "atomic.train.18303",
  "atomic.train.15704",
  "atomic.train.34761",
  "atomic.train.23565",
  "atomic.train.9820",
  "atomic.train.6531",
  "atomic.train.8190",
  "atomic.train.7019",
  "atomic.train.32770",
  "atomic.train.23756",
  "atomic.train.38431",
  "atomic.train.15705",
  "atomic.train.2782",
  "atomic.train.12435",
  "atomic.train.28773",
  "atomic.train.14248",
  "atomic.train.30738",
  "atomic.train.6684",
  "atomic.train.37755",
  "atomic.train.13564",
  "atomic.train.778",
  "atomic.train.10980",
  "atomic.train.10263",
  "atomic.train.17788",
  "atomic.train.37943",
  "atomic.train.19366",
  "atomic.train.30104",
  "atomic.train.11101",
  "atomic.train.31354",
  "atomic.train.36261",
  "atomic.train.9886",
  "atomic.train.18446",
  "atomic.train.2578",
  "atomic.train.29649",
  "atomic.train.10048",
  "atomic.train.12204",
  "atomic.train.30105",
  "atomic.train.21125",
  "atomic.train.16766"
 ],
 "hit_type_id": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
 "max_assignments": 3,
 "origin_split": "atomic_train_annotation_examples",
 "post_date": "2023-01-11 12:01:32.798593",
 "posted_hits": [
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3Z33IC0JCZLJBWWX2139WF8BQAW9VX",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.32501",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3ZTE0JGGCDRQJAU3D9RM3DFB022COF",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.30739",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3A9LA2FRWRD4URJB0SSJXH3KPYBXHD",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.1274",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3ZLW647WAKUOZ39FXIIO3X8ETKT231",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.33228",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3BFNCI9LYJPVL46L3UZJZOPM40F73M",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.22712",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3E9ZFLPWOXR4QMUV6AA4XT4ZPBQXI6",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.15319",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3J9L0X0VDELWQLW2SB85IHRPXJY9W7",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.9025",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3EQPA8A373VPQSEGPAJP6FZAAQDZJH",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.26896",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3PR3LXCWSEYBFL1S2G4RK05W6L49X0",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.11060",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3SV8KD29L3RK1CKY7VJ17UZNPFDZKG",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.32120",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3RZS0FBRWJ984A64S941SDK1A7YCPW",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.20538",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3ODOP6T3ARJ9HZSJXWN7D20K7KP24M",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.9078",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "307FVKVSYQEG30PP38429THSI0B747",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.21420",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3XDSWAMB21RT4M7JSMJQSIABF3KCQN",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.36800",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "34D9ZRXCYQTHONPY0CC4HNZOXOJSAP",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.29591",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3EN4YVUOUBR0LXE1OSV49UJZ2QFXJI",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.2881",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "379OL9DBSRD0FQR27CQT3EC58RY9Y6",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.3684",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "34KYK9TV2Q7M7XUQ6QC0CYJUF64SBK",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.18302",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3XEIP58NLZMVLI2GSVV2MUC2EFIZLJ",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.15221",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3PUOXASB5620KG173YSCHLL7EL29ZX",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.24956",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3SSN80MU8BNVWHKJ6DVGA9JCHFFXKH",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.2579",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "36AZSFEYZ3Z2ZPBU0LH5NL31EAYVBS",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.9079",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3DZKABX2ZH4L9U30ELD0Y59JWVYVCZ",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.25742",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3KI0JD2ZU0HUINT3MWXH6R16ERH76S",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.19106",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3XBXDSS887I6GN21RD7HP9WR6FKXLK",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.22933",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3B9J25CZ24C5H2MWKQ8VNIPCXR4SCR",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.22713",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "33KMQD9OFIDDMN785629C51292177R",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.37024",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3GONHBMNHUXFR0K1S7WHM7RREK8ZML",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.21524",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3GL25Y6842TQM5KMRP8WPMBG6KAXMM",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.37784",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3WKGUBL7SYLFILER725CSYZTDKG4LD",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.20874",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "32K26U12DMNVEM9EEH8BIBR1HVAVDZ",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.2846",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3FULMHZ7OTWZO3WC7E6RSBEIDP64MF",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.11568",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3QTFNPMJC5HL9I5148BHZMGRJAIZNL",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.25743",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "356TQKY9XEWHM1CRFBUFQ5XXKM778E",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.11069",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3N2YPY1GI5X06SNEACJVOT9MH7BVES",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.5662",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "31D0ZWOD09YHNE5MRATK7HT52W1A0L",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.19482",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3RDTX9JRTX0H06V1K30TQ1S84SP793",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.18303",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3QQUBC64ZDDW4N5M3QNW210GBAKXNM",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.15704",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3YD0MU1NC10V5P56C9ETMW3SAA77AI",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.34761",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3VI0PC2ZAXJEM85Y45N9HQ0L1KPXO1",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.23565",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3VLL1PIENPN3R35D5NBUEBGW9KNZO0",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.9820",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "30ZKOOGW2V5HU3Q4NTXKLMCF7O7A1O",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.6531",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3NOEP8XAU31W78HZJ50O6Q5BBPLXPI",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.8190",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "38O9DZ0A61MNWMWXGKGMA0KY3BV267",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.7019",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3MJ9GGZYO25OJO806XXYQ5MKZULA25",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.32770",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3PZDSVZ3J4G56LHCJFLR5Q3IIFG4NF",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.23756",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3YKP7CX6G1E0OZAYINEPH7NYSSS7BD",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.38431",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "35YHTYFL1F2SC6NA5N316BUMT8QVFA",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.15705",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3URJ6VVYUOMNO6HOKUL4KF3N8PL4OU",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.2782",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "359AP8GAGFJJY424WNAKSRTGADS7CK",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.12435",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "31HLTCK4BKUYQ6J5G79JOWUYUNQVG9",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.28773",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3KLL7H3EGC0CQ2EG0DR19W6Z9N3VH8",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.14248",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "30U1YOGZG9VFMUSAKM367O7UIRGSDR",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.30738",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3UUSLRKAUK2T3W8IWJ5VCXBYVD47DK",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.6684",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3MXX6RQ9EU4596TPZUYJ9F8DIUH4PB",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.37755",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3OLZC0DJ8IECMXP06V9M987E90IVI1",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.13564",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3SBX2M1TKCMQ9IU4Z7D89KYNNQ34Q2",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.778",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3NRZ1LDP7V5LC3HEKNO93BLMJPJZPH",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.10980",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3FCO4VKOZ3CYV2MISEGFIFTJVP57ED",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.10263",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3T2EL38U0LJH7KIEJIFD6VVLGL7XQ9",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.17788",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3X878VYTIDHQ1GMENP0L0XEJ7QK7FV",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.37943",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3RQVKZ7ZRJI60MA2ZULEGEKUYMF276",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.19366",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3LCXHSGDLS5KE06AGHEQD6PFI3HSEK",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.30104",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3TRB893CSI9WFGI9Y963IIEV85K7GU",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.11101",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "36BTXXLZ2U7QLJ94CM28EA8SJC54R3",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.31354",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3TC2K6WK9F1A00FL9ZDKUEGP96L28T",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.36261",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "372AGES0I34HJLXEWX4DBL5QC79XRA",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.9886",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "367O8HRHKF72MY9HRB2D4KDO5EO4SR",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.18446",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3FJ2RVH25Y5AE5YVERJYUAB0TC329I",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.2578",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3CVBMEMMXAFAFCDKIFOL3IQWN5X7HT",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.29649",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3MJ9GGZYO25OJO806XXYQ5MKZUL2AX",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.10048",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3T5ZXGO9DDN6CFITK03Y3GBWOL5ZQ8",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.12204",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "3OZ4VAIBEWE8H896ODUML9MEMF7VJD",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.30105",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "338GLSUI42ACKE66BSYWVOAFU4WSF2",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.21125",
   "Reward": "0.21"
  },
  {
   "AssignmentDurationInSeconds": 1500,
   "AutoApprovalDelayInSeconds": 183600,
   "HITId": "36818Z1KV2CD464JAXB39FRC58LA3G",
   "HITReviewStatus": "NotReviewed",
   "HITStatus": "Assignable",
   "HITTypeId": "3VWCB4I0H857IXL6VXGWXCAPX4JQ7H",
   "MaxAssignments": 3,
   "NumberOfAssignmentsAvailable": 3,
   "NumberOfAssignmentsCompleted": 0,
   "NumberOfAssignmentsPending": 0,
   "QualificationRequirements": [
    {
     "ActionsGuarded": "Accept",
     "Comparator": "In",
     "LocaleValues": [
      {
       "Country": "AU"
      },
      {
       "Country": "CA"
      },
      {
       "Country": "GB"
      },
      {
       "Country": "NZ"
      },
      {
       "Country": "US"
      }
     ],
     "QualificationTypeId": "00000000000000000071",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      100
     ],
     "QualificationTypeId": "00000000000000000040",
     "RequiredToPreview": false
    },
    {
     "ActionsGuarded": "Accept",
     "Comparator": "GreaterThanOrEqualTo",
     "IntegerValues": [
      95
     ],
     "QualificationTypeId": "000000000000000000L0",
     "RequiredToPreview": false
    }
   ],
   "RequesterAnnotation": "atomic.train.16766",
   "Reward": "0.21"
  }
 ],
 "requestor_note": "fourth batch of atomic examples",
 "tasks": [
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.32501",
    "hypothesis": "Because PersonX wanted to harm another",
    "label": 1,
    "premise": "PersonX pricks PersonX's finger",
    "premise_hypothesis_id": "atomic.train.14755",
    "source_example_metadata": {
     "AtomicEventId": "WsQxgdNQap7vzpqZ3wFhBQ==",
     "AtomicEventRelationId": "iraxPuBXrIgVCeySvwhKTw==",
     "AtomicInference": "to harm another",
     "AtomicRelationType": "xIntent"
    },
    "update": "PersonX is emo",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.32501",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX pricks PersonX's finger\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBecause PersonX wanted to harm another\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX is emo\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX is emo')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX is emo')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX is emo')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.30739",
    "hypothesis": "Before, PersonX needed get home sale classified ads",
    "label": 1,
    "premise": "PersonX needs a home",
    "premise_hypothesis_id": "atomic.train.13956",
    "source_example_metadata": {
     "AtomicEventId": "Mw3vOeuipdWCcqaY9Ht7xQ==",
     "AtomicEventRelationId": "aFQRyX_9kBreQV7pgwXQhA==",
     "AtomicInference": "get home sale classified ads",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX moves to a place they are unfamiliar qwith",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.30739",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX needs a home\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed get home sale classified ads\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX moves to a place they are unfamiliar qwith\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX moves to a place they are unfamiliar qwith')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX moves to a place they are unfamiliar qwith')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX moves to a place they are unfamiliar qwith')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.1274",
    "hypothesis": "Before, PersonX needed a reason for the meeting",
    "label": 0,
    "premise": "PersonX calls PersonY into the office",
    "premise_hypothesis_id": "atomic.train.603",
    "source_example_metadata": {
     "AtomicEventId": "_bV_2H3aJ3urNfdI6qNGSw==",
     "AtomicEventRelationId": "o--5DJ6IP2Tw6ABXDNSlVA==",
     "AtomicInference": "a reason for the meeting",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX just wanted to say \"hello\" to PersonY.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.1274",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX calls PersonY into the office\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed a reason for the meeting\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX just wanted to say \"hello\" to PersonY.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX just wanted to say \"hello\" to PersonY.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX just wanted to say \"hello\" to PersonY.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX just wanted to say \"hello\" to PersonY.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.33228",
    "hypothesis": "As a result, PersonX feels ambitious",
    "label": 0,
    "premise": "PersonX mows my lawn",
    "premise_hypothesis_id": "atomic.train.15088",
    "source_example_metadata": {
     "AtomicEventId": "-UW9XIeHrbj9r32wLdeuwA==",
     "AtomicEventRelationId": "mAKt6-4boN0LmdbWlFgcVA==",
     "AtomicInference": "ambitious",
     "AtomicRelationType": "xAttr"
    },
    "update": "The lawn is vast and it takes hours.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.33228",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX mows my lawn\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX feels ambitious\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tThe lawn is vast and it takes hours.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'The lawn is vast and it takes hours.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'The lawn is vast and it takes hours.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'The lawn is vast and it takes hours.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.22712",
    "hypothesis": "Before, PersonX needed to get noisy objects",
    "label": 0,
    "premise": "PersonX makes loud noises",
    "premise_hypothesis_id": "atomic.train.10421",
    "source_example_metadata": {
     "AtomicEventId": "erxWB6BQKij1Gv7EVX65FQ==",
     "AtomicEventRelationId": "vSDDfnI131Bv2LJFcKfKPA==",
     "AtomicInference": "to get noisy objects",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX claps their hands.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.22712",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX makes loud noises\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed to get noisy objects\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX claps their hands.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX claps their hands.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX claps their hands.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX claps their hands.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.15319",
    "hypothesis": "Because PersonX wanted to enjoy the city",
    "label": 1,
    "premise": "PersonX goes downtown",
    "premise_hypothesis_id": "atomic.train.7146",
    "source_example_metadata": {
     "AtomicEventId": "I-TRA65beoH_LTOz5OBWpA==",
     "AtomicEventRelationId": "ITatbkNCkOflOUQUveTYrw==",
     "AtomicInference": "to enjoy the city",
     "AtomicRelationType": "xIntent"
    },
    "update": "PersonX is a tourist visiting from another country.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.15319",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX goes downtown\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBecause PersonX wanted to enjoy the city\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX is a tourist visiting from another country.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX is a tourist visiting from another country.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX is a tourist visiting from another country.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX is a tourist visiting from another country.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.9025",
    "hypothesis": "Before, PersonX needed to have multiple friendships.",
    "label": 1,
    "premise": "PersonX likes PersonY more",
    "premise_hypothesis_id": "atomic.train.4255",
    "source_example_metadata": {
     "AtomicEventId": "11cyxbI7jBbJKZT-g6kr2Q==",
     "AtomicEventRelationId": "JOKqMkIk98DdOH3NUy2MbA==",
     "AtomicInference": "to have multiple friendships.",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX buys a gift for PersonY.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.9025",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX likes PersonY more\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed to have multiple friendships.\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX buys a gift for PersonY.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX buys a gift for PersonY.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX buys a gift for PersonY.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX buys a gift for PersonY.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.26896",
    "hypothesis": "PersonX is seen as depressed",
    "label": 0,
    "premise": "PersonX loses contact",
    "premise_hypothesis_id": "atomic.train.12247",
    "source_example_metadata": {
     "AtomicEventId": "YFpYHBYUdgizDVs2SbHF2A==",
     "AtomicEventRelationId": "ztYAdYaj5LOiiBwItkLGJA==",
     "AtomicInference": "depressed",
     "AtomicRelationType": "xReact"
    },
    "update": "The other person was toxic",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.26896",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX loses contact\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX is seen as depressed\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tThe other person was toxic\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'The other person was toxic')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'The other person was toxic')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'The other person was toxic')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.11060",
    "hypothesis": "Because PersonX wanted to win the soccer game.",
    "label": 0,
    "premise": "PersonX takes the field",
    "premise_hypothesis_id": "atomic.train.5205",
    "source_example_metadata": {
     "AtomicEventId": "i44YN0eOHFLf6YXLbsCJSA==",
     "AtomicEventRelationId": "XgE5GhIraey_UmLj4lGfYA==",
     "AtomicInference": "to win the soccer game.",
     "AtomicRelationType": "xIntent"
    },
    "update": "They are wearing a cap and gown",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.11060",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX takes the field\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBecause PersonX wanted to win the soccer game.\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tThey are wearing a cap and gown\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'They are wearing a cap and gown')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'They are wearing a cap and gown')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'They are wearing a cap and gown')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.32120",
    "hypothesis": "Because PersonX wanted to get to know y",
    "label": 0,
    "premise": "PersonX arouses PersonY interest",
    "premise_hypothesis_id": "atomic.train.14589",
    "source_example_metadata": {
     "AtomicEventId": "uTl49DUTtt3VoV6JHjYIcQ==",
     "AtomicEventRelationId": "yFiRtWmmxHtG_OPX9Q2l_Q==",
     "AtomicInference": "to get to know y",
     "AtomicRelationType": "xIntent"
    },
    "update": "PersonX is a celebrity",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.32120",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX arouses PersonY interest\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBecause PersonX wanted to get to know y\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX is a celebrity\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX is a celebrity')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX is a celebrity')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX is a celebrity')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.20538",
    "hypothesis": "PersonX then talks to the teller",
    "label": 0,
    "premise": "PersonX calls the bank",
    "premise_hypothesis_id": "atomic.train.9497",
    "source_example_metadata": {
     "AtomicEventId": "ofMIVjvruDtdgxeshzUqDA==",
     "AtomicEventRelationId": "91t3GzzFWnsmJBUE5OFq4w==",
     "AtomicInference": "talks to the teller",
     "AtomicRelationType": "xEffect"
    },
    "update": "PersonX just needs to know the bank's hours.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.20538",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX calls the bank\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX then talks to the teller\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX just needs to know the bank's hours.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX just needs to know the bank\\'s hours.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX just needs to know the bank\\'s hours.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX just needs to know the bank\\'s hours.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.9078",
    "hypothesis": "Because PersonX wanted to waste time",
    "label": 0,
    "premise": "PersonX spins around",
    "premise_hypothesis_id": "atomic.train.4279",
    "source_example_metadata": {
     "AtomicEventId": "imRxIJz-IKXWjeoaygrBhA==",
     "AtomicEventRelationId": "9IAohk2HP9AlBEhfoMw9Zw==",
     "AtomicInference": "to waste time",
     "AtomicRelationType": "xIntent"
    },
    "update": "PersonX had an appointment to make.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.9078",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX spins around\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBecause PersonX wanted to waste time\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX had an appointment to make.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX had an appointment to make.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX had an appointment to make.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX had an appointment to make.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.21420",
    "hypothesis": "As a result, PersonX wants nothing",
    "label": 0,
    "premise": "PersonX poses PersonY threat",
    "premise_hypothesis_id": "atomic.train.9873",
    "source_example_metadata": {
     "AtomicEventId": "8oBDwS2qBnjvIoC18aaNoA==",
     "AtomicEventRelationId": "X-OihNMi_kGeQWhZmwSYiA==",
     "AtomicInference": "nothing",
     "AtomicRelationType": "xWant"
    },
    "update": "PersonX feels the need to eliminate the threat.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.21420",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX poses PersonY threat\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX wants nothing\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX feels the need to eliminate the threat.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX feels the need to eliminate the threat.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX feels the need to eliminate the threat.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX feels the need to eliminate the threat.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.36800",
    "hypothesis": "Because PersonX wanted to be friends",
    "label": 0,
    "premise": "PersonX puts PersonX's trust in PersonY",
    "premise_hypothesis_id": "atomic.train.16694",
    "source_example_metadata": {
     "AtomicEventId": "ybKZcdLj_-QFnXx_9zsyLw==",
     "AtomicEventRelationId": "x7mjp5RwzMo43MQFU8Dxtw==",
     "AtomicInference": "to be friends",
     "AtomicRelationType": "xIntent"
    },
    "update": "PersonX respects PersonY a lot.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.36800",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX puts PersonX's trust in PersonY\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBecause PersonX wanted to be friends\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX respects PersonY a lot.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX respects PersonY a lot.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX respects PersonY a lot.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX respects PersonY a lot.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.29591",
    "hypothesis": "PersonX then hopes for the best",
    "label": 1,
    "premise": "PersonX prepares for PersonX's reception",
    "premise_hypothesis_id": "atomic.train.13427",
    "source_example_metadata": {
     "AtomicEventId": "RAHhvK3W7GsQFotjdnDfjQ==",
     "AtomicEventRelationId": "9uTOeo5x7aaDKk0kO8CAZw==",
     "AtomicInference": "hopes for the best",
     "AtomicRelationType": "xEffect"
    },
    "update": "Her friends don't mind that the reception will be a small one.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.29591",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX prepares for PersonX's reception\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX then hopes for the best\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tHer friends don't mind that the reception will be a small one.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'Her friends don\\'t mind that the reception will be a small one.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'Her friends don\\'t mind that the reception will be a small one.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'Her friends don\\'t mind that the reception will be a small one.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.2881",
    "hypothesis": "PersonX is seen as completed",
    "label": 1,
    "premise": "PersonX uses PersonX's eyes",
    "premise_hypothesis_id": "atomic.train.1356",
    "source_example_metadata": {
     "AtomicEventId": "NMNaV6wTblhFvNr3hgM7Cg==",
     "AtomicEventRelationId": "Gr7h_gs696KgRbBmj8wt3A==",
     "AtomicInference": "completed",
     "AtomicRelationType": "xReact"
    },
    "update": "PersonX was blind before now.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.2881",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX uses PersonX's eyes\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX is seen as completed\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX was blind before now.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX was blind before now.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX was blind before now.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX was blind before now.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.3684",
    "hypothesis": "Before, PersonX needed to go to PersonY",
    "label": 0,
    "premise": "PersonX turns PersonY's face",
    "premise_hypothesis_id": "atomic.train.1731",
    "source_example_metadata": {
     "AtomicEventId": "pvH5ePKPpTbpDrzlpIxwvw==",
     "AtomicEventRelationId": "fLBQk4AN2cmdN2-ACgYV3A==",
     "AtomicInference": "to go to PersonY",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX has a picture of PersonY open on a 3d photo shop application.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.3684",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX turns PersonY's face\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed to go to PersonY\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX has a picture of PersonY open on a 3d photo shop application.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX has a picture of PersonY open on a 3d photo shop application.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX has a picture of PersonY open on a 3d photo shop application.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX has a picture of PersonY open on a 3d photo shop application.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.18302",
    "hypothesis": "Before, PersonX needed to visit person Y's home",
    "label": 0,
    "premise": "PersonX talks to PersonY's neighbor",
    "premise_hypothesis_id": "atomic.train.8509",
    "source_example_metadata": {
     "AtomicEventId": "DizBd1_so1iZKllTL_FRlw==",
     "AtomicEventRelationId": "U1fjWaYArya9cDWl3duwuQ==",
     "AtomicInference": "to visit person Y's home",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX and PersonY's neighbor both ran out of groceries on the same day.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.18302",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX talks to PersonY's neighbor\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed to visit person Y's home\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX and PersonY's neighbor both ran out of groceries on the same day.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX and PersonY\\'s neighbor both ran out of groceries on the same day.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX and PersonY\\'s neighbor both ran out of groceries on the same day.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX and PersonY\\'s neighbor both ran out of groceries on the same day.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.15221",
    "hypothesis": "As a result, PersonX feels famished",
    "label": 1,
    "premise": "PersonX gets chinese food",
    "premise_hypothesis_id": "atomic.train.7100",
    "source_example_metadata": {
     "AtomicEventId": "3QeM56CVpqTpdO053vKx7A==",
     "AtomicEventRelationId": "AJXTIW7mKH2xVlbjTULDkQ==",
     "AtomicInference": "famished",
     "AtomicRelationType": "xAttr"
    },
    "update": "PersonX ordered a side only",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.15221",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX gets chinese food\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX feels famished\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX ordered a side only\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX ordered a side only')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX ordered a side only')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX ordered a side only')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.24956",
    "hypothesis": "As a result, PersonX wants to meet the doctor",
    "label": 0,
    "premise": "PersonX has to take PersonY to the doctor",
    "premise_hypothesis_id": "atomic.train.11417",
    "source_example_metadata": {
     "AtomicEventId": "7qy3XQ51NA3u2aRXLqpocg==",
     "AtomicEventRelationId": "3T9p4E0XWVRRFyCf99iD9g==",
     "AtomicInference": "to meet the doctor",
     "AtomicRelationType": "xWant"
    },
    "update": "They have an emergency",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.24956",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX has to take PersonY to the doctor\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX wants to meet the doctor\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tThey have an emergency\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'They have an emergency')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'They have an emergency')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'They have an emergency')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.2579",
    "hypothesis": "As a result, PersonX wants to go to a store",
    "label": 1,
    "premise": "PersonX goes from PersonY",
    "premise_hypothesis_id": "atomic.train.1215",
    "source_example_metadata": {
     "AtomicEventId": "Lwfmm_pD99QoJJXbXC5gkg==",
     "AtomicEventRelationId": "euJtyqx3_dw1bhe_fBlg1w==",
     "AtomicInference": "to go to a store",
     "AtomicRelationType": "xWant"
    },
    "update": "It is Y's birthday today.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.2579",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX goes from PersonY\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX wants to go to a store\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tIt is Y's birthday today.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'It is Y\\'s birthday today.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'It is Y\\'s birthday today.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'It is Y\\'s birthday today.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.9079",
    "hypothesis": "Because PersonX wanted to waste time",
    "label": 1,
    "premise": "PersonX spins around",
    "premise_hypothesis_id": "atomic.train.4279",
    "source_example_metadata": {
     "AtomicEventId": "imRxIJz-IKXWjeoaygrBhA==",
     "AtomicEventRelationId": "9IAohk2HP9AlBEhfoMw9Zw==",
     "AtomicInference": "to waste time",
     "AtomicRelationType": "xIntent"
    },
    "update": "PersonX was unmotivated.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.9079",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX spins around\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBecause PersonX wanted to waste time\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX was unmotivated.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX was unmotivated.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX was unmotivated.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX was unmotivated.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.25742",
    "hypothesis": "As a result, PersonX feels aggressive",
    "label": 0,
    "premise": "PersonX holds out PersonY's arms",
    "premise_hypothesis_id": "atomic.train.11757",
    "source_example_metadata": {
     "AtomicEventId": "B6nxETDDHNpsT_uj_Sehig==",
     "AtomicEventRelationId": "KKitiIIzgc9n0ZRdORdVXg==",
     "AtomicInference": "aggressive",
     "AtomicRelationType": "xAttr"
    },
    "update": "PersonX is measuring PersonY for a suit",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.25742",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX holds out PersonY's arms\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX feels aggressive\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX is measuring PersonY for a suit\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX is measuring PersonY for a suit')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX is measuring PersonY for a suit')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX is measuring PersonY for a suit')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.19106",
    "hypothesis": "As a result, PersonX wants to apologize",
    "label": 0,
    "premise": "PersonX plays old harry",
    "premise_hypothesis_id": "atomic.train.8864",
    "source_example_metadata": {
     "AtomicEventId": "aDXPLg6e-ZMXuytXpal3rQ==",
     "AtomicEventRelationId": "Hzlrk0vD5ajeOAjO8K7gWA==",
     "AtomicInference": "to apologize",
     "AtomicRelationType": "xWant"
    },
    "update": "Old Harry bullied PersonX",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.19106",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX plays old harry\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX wants to apologize\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tOld Harry bullied PersonX\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'Old Harry bullied PersonX')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'Old Harry bullied PersonX')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'Old Harry bullied PersonX')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.22933",
    "hypothesis": "Before, PersonX needed wipe off the microscope",
    "label": 1,
    "premise": "PersonX uses PersonY microscope",
    "premise_hypothesis_id": "atomic.train.10514",
    "source_example_metadata": {
     "AtomicEventId": "iYMg5OyGYXoT-r8dBNiiSQ==",
     "AtomicEventRelationId": "rmnpGDStwkx8FX_UxYI3ow==",
     "AtomicInference": "wipe off the microscope",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonY was eating chips",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.22933",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX uses PersonY microscope\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed wipe off the microscope\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonY was eating chips\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonY was eating chips')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonY was eating chips')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonY was eating chips')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.22713",
    "hypothesis": "Before, PersonX needed to get noisy objects",
    "label": 1,
    "premise": "PersonX makes loud noises",
    "premise_hypothesis_id": "atomic.train.10421",
    "source_example_metadata": {
     "AtomicEventId": "erxWB6BQKij1Gv7EVX65FQ==",
     "AtomicEventRelationId": "vSDDfnI131Bv2LJFcKfKPA==",
     "AtomicInference": "to get noisy objects",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX beats on a drum.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.22713",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX makes loud noises\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed to get noisy objects\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX beats on a drum.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX beats on a drum.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX beats on a drum.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX beats on a drum.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.37024",
    "hypothesis": "Before, PersonX needed spend to much money.",
    "label": 0,
    "premise": "PersonX has a gambling problem",
    "premise_hypothesis_id": "atomic.train.16801",
    "source_example_metadata": {
     "AtomicEventId": "oK2yoAwX2NVuJAMZCjQlaA==",
     "AtomicEventRelationId": "QZxAS7AZtcjO9t-3AcuNuQ==",
     "AtomicInference": "Spend to much money.",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX gambles with candy",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.37024",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX has a gambling problem\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed spend to much money.\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX gambles with candy\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX gambles with candy')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX gambles with candy')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX gambles with candy')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.21524",
    "hypothesis": "Before, PersonX needed to apply bright makeup",
    "label": 0,
    "premise": "PersonX shines like the sun",
    "premise_hypothesis_id": "atomic.train.9915",
    "source_example_metadata": {
     "AtomicEventId": "lVdoeI2zLZAOPTbCD7ccxw==",
     "AtomicEventRelationId": "bvRZ9yX-QzgN0g8N2tKiuw==",
     "AtomicInference": "To apply bright makeup",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX got very sweaty.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.21524",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX shines like the sun\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed to apply bright makeup\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX got very sweaty.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX got very sweaty.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX got very sweaty.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX got very sweaty.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.37784",
    "hypothesis": "As a result, PersonX feels bad",
    "label": 0,
    "premise": "PersonX takes PersonY seat",
    "premise_hypothesis_id": "atomic.train.17150",
    "source_example_metadata": {
     "AtomicEventId": "gQqL7UOu4kO4lzhmFnfjWQ==",
     "AtomicEventRelationId": "0TrrjYEzqEhj-S4U_Prlcw==",
     "AtomicInference": "bad",
     "AtomicRelationType": "xAttr"
    },
    "update": "X is old and disabled.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.37784",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX takes PersonY seat\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX feels bad\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tX is old and disabled.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'X is old and disabled.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'X is old and disabled.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'X is old and disabled.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.20874",
    "hypothesis": "Before, PersonX needed car",
    "label": 0,
    "premise": "PersonX goes home disappointed",
    "premise_hypothesis_id": "atomic.train.9640",
    "source_example_metadata": {
     "AtomicEventId": "ZvINXe1mu-LKUHseD0fndQ==",
     "AtomicEventRelationId": "F-woyYAnoMqumN3ut7KnAA==",
     "AtomicInference": "car",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX asked someone on a date and got rejected",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.20874",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX goes home disappointed\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed car\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX asked someone on a date and got rejected\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX asked someone on a date and got rejected')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX asked someone on a date and got rejected')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX asked someone on a date and got rejected')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.2846",
    "hypothesis": "PersonX then gets stronger",
    "label": 0,
    "premise": "PersonX gains muscle",
    "premise_hypothesis_id": "atomic.train.1342",
    "source_example_metadata": {
     "AtomicEventId": "fZDFSb47GCrvL0AABs93hw==",
     "AtomicEventRelationId": "mO8KYP1wxhL_BEoMmrNeKQ==",
     "AtomicInference": "gets stronger",
     "AtomicRelationType": "xEffect"
    },
    "update": "PersonX is building a model of human anatomy.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.2846",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX gains muscle\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX then gets stronger\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX is building a model of human anatomy.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX is building a model of human anatomy.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX is building a model of human anatomy.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX is building a model of human anatomy.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.11568",
    "hypothesis": "Before, PersonX needed to decide on a marketing scheme",
    "label": 0,
    "premise": "PersonX markets and sell a product or service",
    "premise_hypothesis_id": "atomic.train.5441",
    "source_example_metadata": {
     "AtomicEventId": "xTeIoVSlFZ2OqierOQNn5w==",
     "AtomicEventRelationId": "naXzYMzzh7L3XeFnsLih-Q==",
     "AtomicInference": "to decide on a marketing scheme",
     "AtomicRelationType": "xNeed"
    },
    "update": "Person X is a low level employee at a big firm.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.11568",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX markets and sell a product or service\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed to decide on a marketing scheme\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPerson X is a low level employee at a big firm.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'Person X is a low level employee at a big firm.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'Person X is a low level employee at a big firm.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'Person X is a low level employee at a big firm.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.25743",
    "hypothesis": "As a result, PersonX feels aggressive",
    "label": 1,
    "premise": "PersonX holds out PersonY's arms",
    "premise_hypothesis_id": "atomic.train.11757",
    "source_example_metadata": {
     "AtomicEventId": "B6nxETDDHNpsT_uj_Sehig==",
     "AtomicEventRelationId": "KKitiIIzgc9n0ZRdORdVXg==",
     "AtomicInference": "aggressive",
     "AtomicRelationType": "xAttr"
    },
    "update": "PersonX is about to break them",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.25743",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX holds out PersonY's arms\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX feels aggressive\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX is about to break them\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX is about to break them')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX is about to break them')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX is about to break them')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.11069",
    "hypothesis": "Because PersonX wanted to help",
    "label": 1,
    "premise": "PersonX finds my keys",
    "premise_hypothesis_id": "atomic.train.5208",
    "source_example_metadata": {
     "AtomicEventId": "IrCusmjyTI5-T2H9qZowIw==",
     "AtomicEventRelationId": "fBiQnHKxx0m5R8PiohkcBg==",
     "AtomicInference": "to help",
     "AtomicRelationType": "xIntent"
    },
    "update": "PersonX was going in the opposite direction",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.11069",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX finds my keys\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBecause PersonX wanted to help\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX was going in the opposite direction\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX was going in the opposite direction')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX was going in the opposite direction')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX was going in the opposite direction')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.5662",
    "hypothesis": "Before, PersonX needed to transport themselves to the station",
    "label": 0,
    "premise": "PersonX meets PersonY at the station",
    "premise_hypothesis_id": "atomic.train.2674",
    "source_example_metadata": {
     "AtomicEventId": "tOe1Fq0sczcg5x8ItNpOZg==",
     "AtomicEventRelationId": "yANm9RlXtb4tOoA81pn3FA==",
     "AtomicInference": "to transport themselves to the station",
     "AtomicRelationType": "xNeed"
    },
    "update": "Person X setup the meeting from the station.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.5662",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX meets PersonY at the station\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed to transport themselves to the station\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPerson X setup the meeting from the station.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'Person X setup the meeting from the station.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'Person X setup the meeting from the station.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'Person X setup the meeting from the station.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.19482",
    "hypothesis": "Because PersonX wanted to complete things hurriedly",
    "label": 0,
    "premise": "PersonX spills PersonY's drink",
    "premise_hypothesis_id": "atomic.train.9035",
    "source_example_metadata": {
     "AtomicEventId": "OJgrB97Upli1B0VUrOs3Pg==",
     "AtomicEventRelationId": "MVvhNNT6g2VEKyfGfWPfrQ==",
     "AtomicInference": "to complete things hurriedly",
     "AtomicRelationType": "xIntent"
    },
    "update": "PersonX is doing it on purpose since PersonY wore a white dress without being the bride",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.19482",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX spills PersonY's drink\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBecause PersonX wanted to complete things hurriedly\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX is doing it on purpose since PersonY wore a white dress without being the bride\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX is doing it on purpose since PersonY wore a white dress without being the bride')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX is doing it on purpose since PersonY wore a white dress without being the bride')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX is doing it on purpose since PersonY wore a white dress without being the bride')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.18303",
    "hypothesis": "Before, PersonX needed to visit person Y's home",
    "label": 1,
    "premise": "PersonX talks to PersonY's neighbor",
    "premise_hypothesis_id": "atomic.train.8509",
    "source_example_metadata": {
     "AtomicEventId": "DizBd1_so1iZKllTL_FRlw==",
     "AtomicEventRelationId": "U1fjWaYArya9cDWl3duwuQ==",
     "AtomicInference": "to visit person Y's home",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX needed to return PersonY's lawn mowner.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.18303",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX talks to PersonY's neighbor\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed to visit person Y's home\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX needed to return PersonY's lawn mowner.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX needed to return PersonY\\'s lawn mowner.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX needed to return PersonY\\'s lawn mowner.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX needed to return PersonY\\'s lawn mowner.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.15704",
    "hypothesis": "PersonX then braided the beard",
    "label": 0,
    "premise": "PersonX strokes PersonX's beard",
    "premise_hypothesis_id": "atomic.train.7323",
    "source_example_metadata": {
     "AtomicEventId": "JDNnGzmH6C0qTtCbIgX-Wg==",
     "AtomicEventRelationId": "qQKLhu1vesOxvOSTdslAhA==",
     "AtomicInference": "braided the beard",
     "AtomicRelationType": "xEffect"
    },
    "update": "PersonX holds three chunks of their hair in their hands.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.15704",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX strokes PersonX's beard\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX then braided the beard\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX holds three chunks of their hair in their hands.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX holds three chunks of their hair in their hands.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX holds three chunks of their hair in their hands.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX holds three chunks of their hair in their hands.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.34761",
    "hypothesis": "PersonX is seen as satisfied",
    "label": 1,
    "premise": "PersonX wants to get rid of PersonY",
    "premise_hypothesis_id": "atomic.train.15762",
    "source_example_metadata": {
     "AtomicEventId": "oO6p-qLhCXgyVtAxN8yCeg==",
     "AtomicEventRelationId": "bJXWQ1Gtry3xmmTMO8GmGw==",
     "AtomicInference": "satisfied",
     "AtomicRelationType": "xReact"
    },
    "update": "PersonX is sick of PersonY's behavior.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.34761",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX wants to get rid of PersonY\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX is seen as satisfied\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX is sick of PersonY's behavior.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX is sick of PersonY\\'s behavior.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX is sick of PersonY\\'s behavior.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX is sick of PersonY\\'s behavior.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.23565",
    "hypothesis": "Before, PersonX needed pick up the phone",
    "label": 1,
    "premise": "PersonX calls the store",
    "premise_hypothesis_id": "atomic.train.10798",
    "source_example_metadata": {
     "AtomicEventId": "J3ESxh1fdgRZf_EtXbbu8Q==",
     "AtomicEventRelationId": "aaVmgCUZIvCa7_d0KSg3cA==",
     "AtomicInference": "pick up the phone",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX calls on a cell phone.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.23565",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX calls the store\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed pick up the phone\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX calls on a cell phone.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX calls on a cell phone.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX calls on a cell phone.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX calls on a cell phone.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.9820",
    "hypothesis": "As a result, PersonX wants to pass Y his phone.",
    "label": 0,
    "premise": "PersonX reaches for PersonY's phone",
    "premise_hypothesis_id": "atomic.train.4631",
    "source_example_metadata": {
     "AtomicEventId": "GNuGKVMa0A1-pMVgqpDVLA==",
     "AtomicEventRelationId": "VQRZmineO3NP4p8lDuBUNQ==",
     "AtomicInference": "to pass Y his phone.",
     "AtomicRelationType": "xWant"
    },
    "update": "PersonX is PersonY's teacher.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.9820",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX reaches for PersonY's phone\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX wants to pass Y his phone.\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX is PersonY's teacher.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX is PersonY\\'s teacher.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX is PersonY\\'s teacher.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX is PersonY\\'s teacher.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.6531",
    "hypothesis": "Before, PersonX needed cut them off",
    "label": 1,
    "premise": "PersonX keeps PersonY's hands",
    "premise_hypothesis_id": "atomic.train.3087",
    "source_example_metadata": {
     "AtomicEventId": "vQLkkQd-SpmaaJzaWB2PWg==",
     "AtomicEventRelationId": "tNWd2UeDVupHIvho73GpbQ==",
     "AtomicInference": "cut them off",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX is a serial killer.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.6531",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX keeps PersonY's hands\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed cut them off\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX is a serial killer.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX is a serial killer.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX is a serial killer.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX is a serial killer.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.8190",
    "hypothesis": "As a result, PersonX feels patient",
    "label": 0,
    "premise": "PersonX waits to go",
    "premise_hypothesis_id": "atomic.train.3860",
    "source_example_metadata": {
     "AtomicEventId": "H34_KkecTbUw_DGEqzb9Rw==",
     "AtomicEventRelationId": "dbx4ivw2q5Dwb4vC1sY_WA==",
     "AtomicInference": "patient",
     "AtomicRelationType": "xAttr"
    },
    "update": "PersonX is tapping their foot aggressively and looking at their watch.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.8190",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX waits to go\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX feels patient\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX is tapping their foot aggressively and looking at their watch.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX is tapping their foot aggressively and looking at their watch.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX is tapping their foot aggressively and looking at their watch.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX is tapping their foot aggressively and looking at their watch.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.7019",
    "hypothesis": "As a result, PersonX feels quick",
    "label": 1,
    "premise": "PersonX hits the brakes",
    "premise_hypothesis_id": "atomic.train.3315",
    "source_example_metadata": {
     "AtomicEventId": "d-GEsVTFv8xNXe-k-V11kQ==",
     "AtomicEventRelationId": "xDmMv3OO3ARgMCraj-5x5A==",
     "AtomicInference": "quick",
     "AtomicRelationType": "xAttr"
    },
    "update": "PersonX has to slow down to stay under the speed limit.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.7019",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX hits the brakes\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX feels quick\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX has to slow down to stay under the speed limit.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX has to slow down to stay under the speed limit.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX has to slow down to stay under the speed limit.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX has to slow down to stay under the speed limit.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.32770",
    "hypothesis": "As a result, PersonX wants to get out of the car",
    "label": 0,
    "premise": "PersonX stops my car",
    "premise_hypothesis_id": "atomic.train.14881",
    "source_example_metadata": {
     "AtomicEventId": "_-icuJP6QsDVjTh2oh0lzg==",
     "AtomicEventRelationId": "ZCo_Muwgw3W23m1NQfrcmg==",
     "AtomicInference": "to get out of the car",
     "AtomicRelationType": "xWant"
    },
    "update": "They want to drive",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.32770",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX stops my car\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX wants to get out of the car\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tThey want to drive\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'They want to drive')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'They want to drive')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'They want to drive')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.23756",
    "hypothesis": "PersonX then keeps a secret",
    "label": 0,
    "premise": "PersonX throws PersonY a surprise party",
    "premise_hypothesis_id": "atomic.train.10878",
    "source_example_metadata": {
     "AtomicEventId": "2y_uM2r7rEtPzCdU1gIX1g==",
     "AtomicEventRelationId": "s8qrvj_sfXzQOMdeJvEU8Q==",
     "AtomicInference": "keeps a secret",
     "AtomicRelationType": "xEffect"
    },
    "update": "PersonX went all out for the party.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.23756",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX throws PersonY a surprise party\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX then keeps a secret\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX went all out for the party.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX went all out for the party.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX went all out for the party.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX went all out for the party.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.38431",
    "hypothesis": "PersonX then grabs lotion",
    "label": 1,
    "premise": "PersonX rubs the back of PersonY's neck",
    "premise_hypothesis_id": "atomic.train.17440",
    "source_example_metadata": {
     "AtomicEventId": "u73xiPdJHte7z55lsqpJdg==",
     "AtomicEventRelationId": "7tGeCXcLLAaCxWJs2UMr3w==",
     "AtomicInference": "grabs lotion",
     "AtomicRelationType": "xEffect"
    },
    "update": "PersonY is at a spa",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.38431",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX rubs the back of PersonY's neck\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX then grabs lotion\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonY is at a spa\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonY is at a spa')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonY is at a spa')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonY is at a spa')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.15705",
    "hypothesis": "PersonX then braided the beard",
    "label": 1,
    "premise": "PersonX strokes PersonX's beard",
    "premise_hypothesis_id": "atomic.train.7323",
    "source_example_metadata": {
     "AtomicEventId": "JDNnGzmH6C0qTtCbIgX-Wg==",
     "AtomicEventRelationId": "qQKLhu1vesOxvOSTdslAhA==",
     "AtomicInference": "braided the beard",
     "AtomicRelationType": "xEffect"
    },
    "update": "PersonX is holding their beard with one hand.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.15705",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX strokes PersonX's beard\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX then braided the beard\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX is holding their beard with one hand.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX is holding their beard with one hand.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX is holding their beard with one hand.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX is holding their beard with one hand.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.2782",
    "hypothesis": "PersonX is seen as like he is in a hurry",
    "label": 0,
    "premise": "PersonX immediately ran",
    "premise_hypothesis_id": "atomic.train.1312",
    "source_example_metadata": {
     "AtomicEventId": "nC0OtIZIPZrjudR6x0OhSg==",
     "AtomicEventRelationId": "t_onAJwCYZr1AfTN1ue9fw==",
     "AtomicInference": "like he is in a hurry",
     "AtomicRelationType": "xReact"
    },
    "update": "Cops are chasing him",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.2782",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX immediately ran\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX is seen as like he is in a hurry\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tCops are chasing him\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'Cops are chasing him')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'Cops are chasing him')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'Cops are chasing him')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.12435",
    "hypothesis": "PersonX is seen as nervous.",
    "label": 1,
    "premise": "PersonX loses in the woods",
    "premise_hypothesis_id": "atomic.train.5842",
    "source_example_metadata": {
     "AtomicEventId": "DAmuHmgjmj2vgKh0t1fwuw==",
     "AtomicEventRelationId": "-pZfi5X-nCJBK6BEgdiVLA==",
     "AtomicInference": "nervous.",
     "AtomicRelationType": "xReact"
    },
    "update": "They have anxiety meds",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.12435",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX loses in the woods\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX is seen as nervous.\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tThey have anxiety meds\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'They have anxiety meds')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'They have anxiety meds')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'They have anxiety meds')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.28773",
    "hypothesis": "Because PersonX wanted to be near PersonY",
    "label": 1,
    "premise": "PersonX sits with PersonY",
    "premise_hypothesis_id": "atomic.train.13060",
    "source_example_metadata": {
     "AtomicEventId": "aFgfLsLdBhhrLouS7TlKLQ==",
     "AtomicEventRelationId": "d0vBjC5jWWWN2c5gbo7TKw==",
     "AtomicInference": "to be near PersonY",
     "AtomicRelationType": "xIntent"
    },
    "update": "They are on a ferris wheel",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.28773",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX sits with PersonY\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBecause PersonX wanted to be near PersonY\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tThey are on a ferris wheel\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'They are on a ferris wheel')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'They are on a ferris wheel')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'They are on a ferris wheel')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.14248",
    "hypothesis": "As a result, PersonX feels experimental",
    "label": 0,
    "premise": "PersonX bases upon research",
    "premise_hypothesis_id": "atomic.train.6652",
    "source_example_metadata": {
     "AtomicEventId": "CsHeRjjh0lkwRzhegn3cHQ==",
     "AtomicEventRelationId": "23NVHdbXaL_48rX7wLwCfA==",
     "AtomicInference": "Experimental",
     "AtomicRelationType": "xAttr"
    },
    "update": "PersonX trusts the conclusion.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.14248",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX bases upon research\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX feels experimental\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX trusts the conclusion.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX trusts the conclusion.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX trusts the conclusion.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX trusts the conclusion.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.30738",
    "hypothesis": "Before, PersonX needed get home sale classified ads",
    "label": 0,
    "premise": "PersonX needs a home",
    "premise_hypothesis_id": "atomic.train.13956",
    "source_example_metadata": {
     "AtomicEventId": "Mw3vOeuipdWCcqaY9Ht7xQ==",
     "AtomicEventRelationId": "aFQRyX_9kBreQV7pgwXQhA==",
     "AtomicInference": "get home sale classified ads",
     "AtomicRelationType": "xNeed"
    },
    "update": "personX is an enlisted soldier",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.30738",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX needs a home\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed get home sale classified ads\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tpersonX is an enlisted soldier\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'personX is an enlisted soldier')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'personX is an enlisted soldier')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'personX is an enlisted soldier')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.6684",
    "hypothesis": "Before, PersonX needed to do everything they wanted to do during the trip",
    "label": 0,
    "premise": "PersonX ends PersonX's trip",
    "premise_hypothesis_id": "atomic.train.3163",
    "source_example_metadata": {
     "AtomicEventId": "LopsSDDbnQ-PHOcdI-ltaA==",
     "AtomicEventRelationId": "t5Q0uegGtnligdqO8tQtUA==",
     "AtomicInference": "to do everything they wanted to do during the trip",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX's hotel reservation had three remaining days.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.6684",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX ends PersonX's trip\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed to do everything they wanted to do during the trip\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX's hotel reservation had three remaining days.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX\\'s hotel reservation had three remaining days.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX\\'s hotel reservation had three remaining days.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX\\'s hotel reservation had three remaining days.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.37755",
    "hypothesis": "PersonX is seen as neutral",
    "label": 1,
    "premise": "PersonX asks PersonY to send",
    "premise_hypothesis_id": "atomic.train.17135",
    "source_example_metadata": {
     "AtomicEventId": "mGvSshH0zAmPctXVOj_rNA==",
     "AtomicEventRelationId": "LNxLasmjEBcVu7Ch7eigeA==",
     "AtomicInference": "neutral",
     "AtomicRelationType": "xReact"
    },
    "update": "PersonX asks PersonY to send their borrowed item back.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.37755",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX asks PersonY to send\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX is seen as neutral\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX asks PersonY to send their borrowed item back.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX asks PersonY to send their borrowed item back.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX asks PersonY to send their borrowed item back.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX asks PersonY to send their borrowed item back.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.13564",
    "hypothesis": "Because PersonX wanted to meet them",
    "label": 0,
    "premise": "PersonX sees PersonX's old friend",
    "premise_hypothesis_id": "atomic.train.6348",
    "source_example_metadata": {
     "AtomicEventId": "o6Apg9tmphyeKGsp4f0E-w==",
     "AtomicEventRelationId": "0A_B8G90Rc6YPkATxktRsA==",
     "AtomicInference": "to meet them",
     "AtomicRelationType": "xIntent"
    },
    "update": "PersonX runs into their old friend in a grocery store.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.13564",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX sees PersonX's old friend\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBecause PersonX wanted to meet them\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX runs into their old friend in a grocery store.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX runs into their old friend in a grocery store.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX runs into their old friend in a grocery store.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX runs into their old friend in a grocery store.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.778",
    "hypothesis": "Before, PersonX needed to prepare the bedroom: put down tarps, etc",
    "label": 0,
    "premise": "PersonX paints PersonY's bedroom",
    "premise_hypothesis_id": "atomic.train.368",
    "source_example_metadata": {
     "AtomicEventId": "cUkvijZxQ2DYYM2HtMU9Pg==",
     "AtomicEventRelationId": "0PMF1NvF3V2FwjwYyTD-6g==",
     "AtomicInference": "to prepare the bedroom: put down tarps, etc",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX's room has no carpet.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.778",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX paints PersonY's bedroom\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed to prepare the bedroom: put down tarps, etc\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX's room has no carpet.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX\\'s room has no carpet.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX\\'s room has no carpet.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX\\'s room has no carpet.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.10980",
    "hypothesis": "Because PersonX wanted to not get a cavity",
    "label": 0,
    "premise": "PersonX cleans PersonX's teeth",
    "premise_hypothesis_id": "atomic.train.5166",
    "source_example_metadata": {
     "AtomicEventId": "cddf2oP1KKiwrEC3bHrEhg==",
     "AtomicEventRelationId": "q4NveTJn1nhxgu9PEh_xZg==",
     "AtomicInference": "to not get a cavity",
     "AtomicRelationType": "xIntent"
    },
    "update": "PersonX wears dentures.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.10980",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX cleans PersonX's teeth\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBecause PersonX wanted to not get a cavity\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX wears dentures.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX wears dentures.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX wears dentures.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX wears dentures.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.10263",
    "hypothesis": "PersonX then begins to smell",
    "label": 1,
    "premise": "PersonX causes the smell",
    "premise_hypothesis_id": "atomic.train.4832",
    "source_example_metadata": {
     "AtomicEventId": "JfoNseCBg_JI7A1M-WazfQ==",
     "AtomicEventRelationId": "S5ICAZiQhTcWy4ztLOw8Ow==",
     "AtomicInference": "begins to smell",
     "AtomicRelationType": "xEffect"
    },
    "update": "PersonX rolls around in their own waste as part of a prank.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.10263",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX causes the smell\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX then begins to smell\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX rolls around in their own waste as part of a prank.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX rolls around in their own waste as part of a prank.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX rolls around in their own waste as part of a prank.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX rolls around in their own waste as part of a prank.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.17788",
    "hypothesis": "Before, PersonX needed to accuse hom",
    "label": 0,
    "premise": "PersonX puts PersonY away",
    "premise_hypothesis_id": "atomic.train.8279",
    "source_example_metadata": {
     "AtomicEventId": "h694ebsT8Njn1QPdIoPFsA==",
     "AtomicEventRelationId": "NYHMqSFbciAeV1BsLsqNkg==",
     "AtomicInference": "to accuse hom",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX illegally arrested PersonY.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.17788",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX puts PersonY away\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed to accuse hom\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX illegally arrested PersonY.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX illegally arrested PersonY.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX illegally arrested PersonY.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX illegally arrested PersonY.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.37943",
    "hypothesis": "As a result, PersonX feels brave",
    "label": 1,
    "premise": "PersonX holds society together",
    "premise_hypothesis_id": "atomic.train.17221",
    "source_example_metadata": {
     "AtomicEventId": "gG9Jt3fwR_YV0f9h-scLaA==",
     "AtomicEventRelationId": "LoBARZ-EcmgBTjx_-oefeg==",
     "AtomicInference": "brave",
     "AtomicRelationType": "xAttr"
    },
    "update": "PersonX was frightened to stand up for society.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.37943",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX holds society together\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX feels brave\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX was frightened to stand up for society.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX was frightened to stand up for society.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX was frightened to stand up for society.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX was frightened to stand up for society.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.19366",
    "hypothesis": "As a result, PersonX feels outdoorsy",
    "label": 0,
    "premise": "PersonX enjoys the weather",
    "premise_hypothesis_id": "atomic.train.8980",
    "source_example_metadata": {
     "AtomicEventId": "_z-OKSue92GwQ2Ob3yB41w==",
     "AtomicEventRelationId": "2VlPC95WFsc7v5j1DjTSEw==",
     "AtomicInference": "outdoorsy",
     "AtomicRelationType": "xAttr"
    },
    "update": "PersonX likes listening to the rain hit the roof of their house.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.19366",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX enjoys the weather\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX feels outdoorsy\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX likes listening to the rain hit the roof of their house.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX likes listening to the rain hit the roof of their house.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX likes listening to the rain hit the roof of their house.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX likes listening to the rain hit the roof of their house.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.30104",
    "hypothesis": "Before, PersonX needed to put it on the oven",
    "label": 0,
    "premise": "PersonX makes a pizza",
    "premise_hypothesis_id": "atomic.train.13673",
    "source_example_metadata": {
     "AtomicEventId": "BL5rTOQOaX-YiJPm9S2CeQ==",
     "AtomicEventRelationId": "xU3v0O5lHF-Ln5Xh_XECVQ==",
     "AtomicInference": "to put it on the oven",
     "AtomicRelationType": "xNeed"
    },
    "update": "It is a no bake desert pizza.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.30104",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX makes a pizza\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed to put it on the oven\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tIt is a no bake desert pizza.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'It is a no bake desert pizza.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'It is a no bake desert pizza.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'It is a no bake desert pizza.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.11101",
    "hypothesis": "Because PersonX wanted to win over some voting event.",
    "label": 1,
    "premise": "PersonX casts PersonX's vote",
    "premise_hypothesis_id": "atomic.train.5224",
    "source_example_metadata": {
     "AtomicEventId": "7eiXl-g7WIgslrCszbV_CQ==",
     "AtomicEventRelationId": "-bm6pKu20Qo5XAkvYMC6qQ==",
     "AtomicInference": "to win over some voting event.",
     "AtomicRelationType": "xIntent"
    },
    "update": "X voted for himself.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.11101",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX casts PersonX's vote\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBecause PersonX wanted to win over some voting event.\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tX voted for himself.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'X voted for himself.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'X voted for himself.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'X voted for himself.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.31354",
    "hypothesis": "Then, they do math problems",
    "label": 0,
    "premise": "PersonX loves math",
    "premise_hypothesis_id": "atomic.train.14242",
    "source_example_metadata": {
     "AtomicEventId": "AVUu0EAQh7zsqRhzPsMQKg==",
     "AtomicEventRelationId": "lh6B6MVW9mzrEbuiGR2QZQ==",
     "AtomicInference": "They do math problems",
     "AtomicRelationType": "xEffect"
    },
    "update": "They're still thinking about math while leaving math class to go to English.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.31354",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX loves math\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tThen, they do math problems\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tThey're still thinking about math while leaving math class to go to English.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'They\\'re still thinking about math while leaving math class to go to English.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'They\\'re still thinking about math while leaving math class to go to English.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'They\\'re still thinking about math while leaving math class to go to English.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.36261",
    "hypothesis": "Before, PersonX needed to get tickets",
    "label": 1,
    "premise": "PersonX makes the trip",
    "premise_hypothesis_id": "atomic.train.16446",
    "source_example_metadata": {
     "AtomicEventId": "rO7kFJIWVSV04yGjkgeG6A==",
     "AtomicEventRelationId": "VtYMIRB7WMX1zmHEEevddA==",
     "AtomicInference": "to get tickets",
     "AtomicRelationType": "xNeed"
    },
    "update": "Person X is travelling by plane.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.36261",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX makes the trip\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed to get tickets\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPerson X is travelling by plane.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'Person X is travelling by plane.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'Person X is travelling by plane.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'Person X is travelling by plane.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.9886",
    "hypothesis": "Because PersonX wanted to be warm",
    "label": 0,
    "premise": "PersonX makes a fire",
    "premise_hypothesis_id": "atomic.train.4662",
    "source_example_metadata": {
     "AtomicEventId": "aFAcMTod4Nl1igbG0_4EOw==",
     "AtomicEventRelationId": "02GPxcm0d8kH9S5Q2VXg3w==",
     "AtomicInference": "to be warm",
     "AtomicRelationType": "xIntent"
    },
    "update": "PersonX had raw hamburger patties and a pan.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.9886",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX makes a fire\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBecause PersonX wanted to be warm\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX had raw hamburger patties and a pan.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX had raw hamburger patties and a pan.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX had raw hamburger patties and a pan.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX had raw hamburger patties and a pan.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.18446",
    "hypothesis": "Before, PersonX needed shoes",
    "label": 0,
    "premise": "PersonX meets PersonX's neighbors",
    "premise_hypothesis_id": "atomic.train.8572",
    "source_example_metadata": {
     "AtomicEventId": "HVGLTKNgiSAtC41rYgTh3Q==",
     "AtomicEventRelationId": "eVhNlZSU1qsnv-pezhaS_A==",
     "AtomicInference": "shoes",
     "AtomicRelationType": "xNeed"
    },
    "update": "PersonX's neighbors thought that PersonX was strange for walking outside barefoot.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.18446",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX meets PersonX's neighbors\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed shoes\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX's neighbors thought that PersonX was strange for walking outside barefoot.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX\\'s neighbors thought that PersonX was strange for walking outside barefoot.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX\\'s neighbors thought that PersonX was strange for walking outside barefoot.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX\\'s neighbors thought that PersonX was strange for walking outside barefoot.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.2578",
    "hypothesis": "As a result, PersonX wants to go to a store",
    "label": 0,
    "premise": "PersonX goes from PersonY",
    "premise_hypothesis_id": "atomic.train.1215",
    "source_example_metadata": {
     "AtomicEventId": "Lwfmm_pD99QoJJXbXC5gkg==",
     "AtomicEventRelationId": "euJtyqx3_dw1bhe_fBlg1w==",
     "AtomicInference": "to go to a store",
     "AtomicRelationType": "xWant"
    },
    "update": "X left his wallet at home.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.2578",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX goes from PersonY\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX wants to go to a store\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tX left his wallet at home.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'X left his wallet at home.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'X left his wallet at home.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'X left his wallet at home.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.29649",
    "hypothesis": "PersonX is seen as better",
    "label": 1,
    "premise": "PersonX cuts PersonX's hair short",
    "premise_hypothesis_id": "atomic.train.13455",
    "source_example_metadata": {
     "AtomicEventId": "I1oUXuNhzJug8EWOgDkI9Q==",
     "AtomicEventRelationId": "LD6IbQSJUKAdr_FXs_rO4g==",
     "AtomicInference": "better",
     "AtomicRelationType": "xReact"
    },
    "update": "PersonX got sick of the long hair.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.29649",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX cuts PersonX's hair short\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX is seen as better\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX got sick of the long hair.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX got sick of the long hair.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX got sick of the long hair.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX got sick of the long hair.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.10048",
    "hypothesis": "PersonX is seen as relaxed",
    "label": 0,
    "premise": "PersonX enjoys PersonX's day off",
    "premise_hypothesis_id": "atomic.train.4737",
    "source_example_metadata": {
     "AtomicEventId": "ME1fb4OagoXw5x0y5MQzZg==",
     "AtomicEventRelationId": "N1i8EdEtqGVkXNK_4dWpMA==",
     "AtomicInference": "relaxed",
     "AtomicRelationType": "xReact"
    },
    "update": "They ran a marathon.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.10048",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX enjoys PersonX's day off\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX is seen as relaxed\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tThey ran a marathon.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'They ran a marathon.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'They ran a marathon.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'They ran a marathon.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.12204",
    "hypothesis": "PersonX then becomes angry with PersonY",
    "label": 0,
    "premise": "PersonX makes PersonY sick",
    "premise_hypothesis_id": "atomic.train.5738",
    "source_example_metadata": {
     "AtomicEventId": "tZojb_L_nt1aRsJa39l7mQ==",
     "AtomicEventRelationId": "icF_yQM5Cws6ZeM-NQUMpQ==",
     "AtomicInference": "becomes angry with PersonY",
     "AtomicRelationType": "xEffect"
    },
    "update": "PersonY gave PersonX a common cold.",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.12204",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX makes PersonY sick\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX then becomes angry with PersonY\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonY gave PersonX a common cold.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonY gave PersonX a common cold.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonY gave PersonX a common cold.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonY gave PersonX a common cold.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.30105",
    "hypothesis": "Before, PersonX needed to put it on the oven",
    "label": 1,
    "premise": "PersonX makes a pizza",
    "premise_hypothesis_id": "atomic.train.13673",
    "source_example_metadata": {
     "AtomicEventId": "BL5rTOQOaX-YiJPm9S2CeQ==",
     "AtomicEventRelationId": "xU3v0O5lHF-Ln5Xh_XECVQ==",
     "AtomicInference": "to put it on the oven",
     "AtomicRelationType": "xNeed"
    },
    "update": "X preheats the oven.",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.30105",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX makes a pizza\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tBefore, PersonX needed to put it on the oven\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tX preheats the oven.\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'X preheats the oven.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'X preheats the oven.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'X preheats the oven.')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.21125",
    "hypothesis": "PersonX is seen as like they are getting something from someone",
    "label": 1,
    "premise": "PersonX drives PersonY up the wall",
    "premise_hypothesis_id": "atomic.train.9747",
    "source_example_metadata": {
     "AtomicEventId": "WMp8AU5dH0BipCshFindLg==",
     "AtomicEventRelationId": "_VR3xklcuGLJ5vC98C_iXQ==",
     "AtomicInference": "like they are getting something from someone",
     "AtomicRelationType": "xReact"
    },
    "update": "PersonX hates PersonY",
    "update_type": "strengthener"
   },
   "internal_id": "atomic.train.21125",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX drives PersonY up the wall\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX is seen as like they are getting something from someone\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Strengthening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX hates PersonY\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX hates PersonY')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX hates PersonY')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX hates PersonY')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  },
  {
   "example_data": {
    "annotated_paraphrases": null,
    "data_source": "atomic",
    "example_id": "atomic.train.16766",
    "hypothesis": "As a result, PersonX feels careless",
    "label": 0,
    "premise": "PersonX burns PersonX's hand",
    "premise_hypothesis_id": "atomic.train.7816",
    "source_example_metadata": {
     "AtomicEventId": "NR4T2ygi-DqQ5wzXbgG9Cg==",
     "AtomicEventRelationId": "lPDcphr5avnGOsBXMIA6FQ==",
     "AtomicInference": "careless",
     "AtomicRelationType": "xAttr"
    },
    "update": "PersonX is engaging in self-harm",
    "update_type": "weakener"
   },
   "internal_id": "atomic.train.16766",
   "split": "atomic",
   "task_html": "<script src=\"https://assets.crowd.aws/crowd-html-elements.js\"></script>\n<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\n<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\n\n<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.min.js\" integrity=\"sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=\" crossorigin=\"anonymous\"></script>\n\n<link href = \"https://code.jquery.com/ui/1.12.1/themes/ui-lightness/jquery-ui.css\" rel=\"stylesheet\">\n\n<style>\n\tbody {\n\t\tpadding: 5px;\n\t\tmargin-bottom: 10px;\n\t\tfont: Roboto;\n\t}\n\t.first-container{\n\t    display: flex;\n\t    justify-content: space-around;\n\t   \twidth: 1100px;\n\t   \tpadding: 10px;\n\t   \tbackground-color: #e1f0f0;\n\t   \tborder-radius: 10px;\n\t}\n\t.left-container {\n\t\t\tfloat: left;\n\t\t\twidth: 35%;\n\t\t\ttext-align: center;\n\t\t\toverflow: scroll;\n\t\t\tpadding: 0px;\n\t}\n\t.right-container {\n\t\t\tfloat: right;\n\t\t\twidth: 65%;\n\t\t\toverflow: scroll;\n\t\t\ttext-align: center;\n\t\t\tpadding-left: 10px;\n\t\t\tpadding-right: 0px;\n\t}\n\t.card {\n\t\tmargin: 10px;\n\t\twidth: 250px;\n\t\toverflow-wrap: break-word;\n\t}\n\n\t.crowd-card {\n   \t width: 100%;\n  }\n\n\t.collapsible {\n\t  background-color:  #ccc;\n\t  color: #444;\n\t  cursor: pointer;\n\t  padding: 5px;\n\t  width: 50%;\n\t  border: none;\n\t  text-align: left;\n\t  outline: none;\n\t  font-size: 20px;\n\t  height:30px;\n\t  border-radius: 12px;\n\t}\n\n\t/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */\n\t.active, .collapsible:hover {\n\t  background-color: #ccc;\n\t}\n\n\t/* Style the collapsible content. Note: hidden by default */\n\t.content {\n\t  padding: 0 18px;\n\t  background-color: #f1f1f1;\n\t  max-height: 0px;\n\t  overflow: hidden;\n\t  transition: max-height 0.2s ease-out;\n\t  width: 75%;\n\t  border-radius: 25px;\n\t}\n\t.collapsible:after {\n\t  content: '\\02795'; /* Unicode character for \"plus\" sign (+) */\n\t  font-size: 13px;\n\t  color: white;\n\t  float: right;\n\t  margin-left: 5px;\n\t}\n\n\t.active:after {\n\t  content: \"\\2796\"; /* Unicode character for \"minus\" sign (-) */\n\t}\n\n</style>\n\n<crowd-form onsubmit=\"verifyHIT();\">\n\t<div>\n\t\t<button id=\"coll_button\" type=\"button\" class=\"collapsible active\" onload=\"clickCollapsible()\"><b><u>Collecting Paraphrases of Simple Scenarios: Task Instructions</u></b></button>\n\t\t<div class=\"content\" style=\"max-height: 1800px !important; height: auto;\">\n\t\t\t<br>\n\t\t\t<b><u>Instructions:</b></u><br>\n\t\t\t<br>\n\t\t\tAre AI systems sensitive to word choice or sentence structure?\n\t\t\t<br><br>\n\n\t\t\tIdeally, when AI systems are presented with two snippets of text that convey the same meaning yet utilize different words or have different sentence structure, they should behave in a similar way. In this HIT, we'll present a scenario consisting of 3 sentences, and your task will be to write paraphrases for one portion of it (i.e use different words or sentence structure to convey the same meaning).\n\n\t\t\t<br><br>\n\n\t\t\tEach scenario consists of a <u><span style='color:#eb8034'>context sentence</span></u>, an <u><span style='color:#7b76db'>inference sentence</span></u> and an <u><span style='color:#0f6066'>evidence sentence</span></u> that either strengthens or weakens the inference sentence. The context and inference set the stage for the scenario. Strengthening evidence sentences make your belief in the inference sentence stronger, and weakening evidence sentences make your belief in the inferece sentence weaker.\n\n\t\t\t<br><br>\n\n\t\t\tYour task is to provide <u>three</u> paraphrases for an evidence sentence such that the words or sentence structure substantially differ from the original sentence, but the meaning is retained.\n\n\t\t\t<br><br>\n\t\t\tYour paraphrases should: <br>\n\t\t\t<ul>\n\t\t\t\t<li><b>Be full, grammatical, coherent sentences.</b></li>\n\t\t\t\t<li><b>Preserve the meaning of the sentence.</b></li>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><i><u>Make sure that sentence <b>meaning</b> does not differ</u></i> from the original sentence.</li>\n\t\t\t\t\t<li><i><u>Refrain from introducing new information</u></i> that violates the situation evoked by the scenario.\n\t\t\t\t\t<li><i><u>Preserve weakening or strengthening evidence.</u></i> If the evidence sentence is labeled as \u201cstrengthening\u201d, your paraphrase should still strengthen your belief in the inference sentence within the context of the scenario. If the sentence is labeled as \u201cweakening\u201d (i.e, it weakens your belief in the inference sentence), make sure that your paraphrase retains this property.\n\t\t\t\t</ul>\n\t\t\t\t<li><b>Be as different as possible from the other paraphrases you enter.</b></li>\n\t\t\t\t<li><b>Differ as much as possible from the original sentence.</b>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Reduce word overlap between the original sentence and your paraphrased version.</li>\n\t\t\t\t\t<li> The HIT UI includes a calculator to measure the distance between your paraphrase and the original sentence via word overlap (# of words in common with the original sentence). The higher this value is, the better! <b>You don't need to achieve a distance measure of 100% in your paraphrases</b> (since you might use words like \"be\", or use common proper nouns), but aim to keep this metric above 40%!) We indicate this ideal range with <span style=\"color:green\">green (40%+)</span>, <span style=\"color:#ccb00a\">yellow (20%-40%)</span>, and <span style=\"color: #C84327\">red (0%-20%)</span> coloring. </li>\n\t\t\t\t</ul>\n\t\t\t</ul>\n\t\t\t<h4><u>UI Instructions:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1AB9GoIyy-k8BIvKD8da4R-jQM_GAtDuC\" width=\"100%\" height=\"auto\">\n\t\t\t<h4><u>Example:</u></h4>\n\t\t\t<br>\n\t\t\t<img style=\"margin-top:-1em;\" src=\"https://drive.google.com/uc?export=view&id=1VTqnZkS2t6ZLZSBbPB0DjzWKJlfUdmag\" width=\"100%\" height=\"auto\">\n\t\t\t<br><br>\n\t\t</div>\n\t<br>\n\t\n<div id=task1 class='first-container'>\n\t<div class=\"left-container\">\n\t\t<h3>Scenario</h3>\n\t\t\t<crowd-card>\n\t\t\t    <div class=\"card\">\n\t\t\t    \t<b><span style='color:#eb8034'>Context</span></b> \n\t\t\t\t\t<br>\n\t\t\t\t\tPersonX burns PersonX's hand\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t        <b><span style='color:#7b76db'>Inference</span></b>\n\t\t\t\t\t<br>\n\t\t\t\t\tAs a result, PersonX feels careless\n\t\t\t    </div>\n\t\t\t</crowd-card>\n\t</div>\n\t<!-- <span id=\"vertical-separator\"></span> -->\n\t<div class=\"right-container\">\n\t\t<h3><span style='color:#0f6066'>Weakening Evidence for Inference</span></h3>\n\t\t\t<crowd-card>\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\tPersonX is engaging in self-harm\n\t\t\t\t</div>\n\t\t\t</crowd-card>\n\t\t<div style='text-align: left; padding-left: 5px; padding-top: 30px'>\n\t\t\t\n<b> Paraphrase the sentence above in three different ways</b> such that its meaning is retained, but the words or sentence structure substantially differ from the original sentence. Make sure that your three paraphrases are <b>different from each other</b> as well.\n\t\t\t\t\t\t\t\n\t\t</div>\n\t\t\n<crowd-input id='paraphrase_1' name='paraphrase_1' spellcheck=\"true\" label='Paraphrase #1' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_1', 'similarity_1', 'PersonX is engaging in self-harm')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_1'></span></div>\n\n\n<crowd-input id='paraphrase_2' name='paraphrase_2' spellcheck=\"true\" label='Paraphrase #2' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_2', 'similarity_2', 'PersonX is engaging in self-harm')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_2'></span></div>\n\n\n<crowd-input id='paraphrase_3' name='paraphrase_3' spellcheck=\"true\" label='Paraphrase #3' required onchange onpropertychange onkeyuponpaste oninput=\"calculate_BLEU('paraphrase_3', 'similarity_3', 'PersonX is engaging in self-harm')\"></crowd-input>\n<div>Distance from Original Sentence: <span id='similarity_3'></span></div>\n\n\t</div>\n</div>\n<br>\n<div style=\"position: relative;\">\n\t<crowd-button id=\"submit_button\" form-action=\"submit\">\n\t\tSubmit\n\t</crowd-button>\n\t<div id=\"errorBox\"></div>\n\t<br>\n</div>\n\n\n\t<script>\n\t\tvar coll = document.getElementsByClassName(\"collapsible\");\n\t\tvar i;\n\n\t\tfor (i = 0; i < coll.length; i++) {\n\t\t  coll[i].addEventListener(\"click\", function() {\n\t\t    this.classList.toggle(\"active\");\n\t\t    var content = this.nextElementSibling;\n\t\t    if (content.style.maxHeight){\n\t\t      content.style.maxHeight = null;\n\t\t    } else {\n\t\t      content.style.maxHeight = content.scrollHeight + \"px\";\n\t\t    }\n\t\t  });\n\t\t}\n\n\t\tfunction verifyTaskCompleted(num_paraphrases){\n\t\t\tvar entries = document.querySelectorAll(\"[id*=paraphrase_]\")\n\t\t\tvar paraphrases = new Set()\n\n\t\t\tfor (var i = 0; i < entries.length; i++){ \n\t\t\t\tif(entries[i].value.trim() === \"\"){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please finish filling out all paraphrases!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\tconst para = cleanAndStripPunctutation(entries[i].value)\n\t\t\t\tparaphrases.add(para)\n\t\t\t\tif(para.length <= 10){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is too short. Please make sure your paraphrases are valid!</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (paraphrases.size != entries.length){\n\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>Please make sure that all your paraphrases are unique (no duplicates allowed)!</crowd-alert>';\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tvar similarities = document.querySelectorAll(\"[id*=similarity_]\")\n\t\t\tfor (var i = 0; i < similarities.length; i++){ \n\t\t\t\tif(parseInt(similarities[i].textContent.slice(0, -1)) == 0){\n\t\t\t\t\terrorBox.innerHTML = '<crowd-alert type=\"error\" dismissible>At least one of your paraphrases is a copy of the sentence you were supposed to paraphrase. Please <b>paraphrase</b> the sentence.</crowd-alert>';\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n  \t\treturn true;\n\t\t}\n\n\t\tfunction verifyHIT(){\n\t      if (!verifyTaskCompleted()) {\n\t          alert(\"Oh no! Something's wrong. Check the error below the submit button.\");\n\t          event.preventDefault(); \n\t      }\n    }\n\n    function cleanAndStripPunctutation(str) {\n    \tvar cleanStr = str.toLowerCase().trim()\n    \tconst regex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g;\n    \treturn cleanStr.replace(regex, '')\n    }\n\n    function calculate_BLEU(free_text_id, similarity_id, original_sentence) {\n    \t//0 - 20 RED, 20 - 40 YELLOW, 40 - 100 GREEN\n\n    \tvar freeText = document.getElementById(free_text_id);\n\n    \tconst para_tokens = cleanAndStripPunctutation(freeText.value).split(' ')\n    \tconst hyp_tokens = cleanAndStripPunctutation(original_sentence).split(' ')\n\n    \tvar para_tokens_set = new Set(para_tokens)\n    \tvar hyp_tokens_set = new Set(hyp_tokens)\n\n    \tintersection = new Set(para_tokens.filter(x=>hyp_tokens_set.has(x)) ),\n\t\tunion = new Set(para_tokens.concat(hyp_tokens));  // This step is unnecessary but is for semantic illustration\n\t\tconst jaccard_sim = intersection.size / union.size\n\t\tconst distance = Math.round((1.0 - jaccard_sim) * 100)\n\t\t  \n\t\tdocument.getElementById(similarity_id).innerText = distance + '%';\n\t\tif (distance <= 20) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#C84327\";\n\t\t} else if (distance > 20 && distance <= 40) {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"#ccb00a\";\n\t\t} else {\n\t\t\tdocument.getElementById(similarity_id).style.color = \"green\";\n\t\t}\n\n    }\n\n\t</script>\n</crowd-form>\n"
  }
 ]
}